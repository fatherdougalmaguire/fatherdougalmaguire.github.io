[
  
    {
      "title"    : "Is there LifeOnMars ?",
      "category" : "projects, corewars",
      "tags"     : "Redcode, MARS, Warriors, MacOS, Swift, SwiftUI",
      "url"      : "/projects/corewars/2025/03/27/Is-there-LifeOnMars.html",
      "date"     : "March 27, 2025",
      "excerpt"  :  "I had made abortive attempts at building MARS environments for the Microbee ( and later the PC ) but nothing ever came to fruition.",
      "content"  :  "I had made abortive attempts at building MARS environments for the Microbee ( and later the PC ) but nothing ever came to fruition.So I decided to bite the bullet and finally complete one.My implementation is called LifeOnMarsIt is written for MacOS Sonoma ( v14.0+ ) using Swift/SwiftUI.It is more of a UI framework at this point but it will serve as a testbed for code patterns required for my other projects."
    } 
  


   

  
   
   
   
   ,{
      "title"    : "About Me",
      "category" : "",
      "tags"     : "true",
      "url"      : "/about",
      "date"     : "",
      "excerpt"  :  "Contrary to what the the site title may lead you to believe, I am not an Irish priest living in exile on a windswept island.",
      "content"  :  "Contrary to what the the site title may lead you to believe, I am not an Irish priest living in exile on a windswept island.I live in Sydney, Australia and work for the technology arm of a large financial institution.That being said, my skills are more technology adjacent.So when it comes to HTML/CSS/JS et al,  I am entirely self-taught.Which will become pretty obvious if you page through the blog,On the plus side, I do own a beautiful black cat.  Drop me a line      Your Name            Email              This will help me respond to your query via an email.            Message        What would you like to discuss?        Submit  "
    } 
    
     
    

  
   

  
   
   
   
   ,{
      "title"    : "Home page",
      "category" : "",
      "tags"     : "true",
      "url"      : "/",
      "date"     : "",
      "excerpt"  :  "As a teenager, I spent a lot of my free time mucking about with the family&#39;s home computer.",
      "content"  :  "The money was just resting in my account - Father Ted CrillyAs a teenager, I spent a lot of my free time mucking about with the family&#39;s home computer. I built a bunch of cool things ( since lost to the ages ) Life ( as it is want to do ) takes you different places and coding fell by the way side. In recent times,  I have wanted to pick up the baton again and get my head around how things have changed. A few projects have been bubbling around in my mind and I wanted to document what I will be doing so things don&#39;t ( once again ) fall down the back of the metaphorical couch. I thought about a YouTube channel.  And then a podcast.   Recognising that I would be terrible at either of these options, I quickly came to my senses and decided that a blog might be the way to go. These pages will attempt to track my journey into this new world. I&#39;m concentrating on three main projects at the moment:                                                         Microbee                Revisiting a computer from my youth by way of a emulator.                                                                                                                     Corewars                Programs battle for supremacy inside a virtual computer.                                                                                                                 Blogging                Using Jekyll to build my own blog and waffle on about stuff.                                                     Latest Posts"
    } 
    
     
    

  
   
   
   
   ,{
      "title"    : "Blogging",
      "category" : "",
      "tags"     : "true",
      "url"      : "/projects/blogging/",
      "date"     : "",
      "excerpt"  :  "I thought it my be a good idea to track the progress of my various software projects.",
      "content"  :  "I thought it my be a good idea to track the progress of my various software projects by way of a blog.Mainly as I am notoriously bad at documentation.But also give me a way to track my progress.Or lack thereof.This then begs the questions:  How do you build a blog ?  Where to host it ?  How much will it cost ?Questions, Questions, QuestionsGiven that this is a vanity project,cost became the prime consideration.After all, zero dollar options were the easiest to justify to the good lady her indoors.So it then becane a decision on whether I went with a turnkey solution like Google Sites, start from scratch or find some happy medium in-between.I became somewhat frustrated with Google Sites as I couldn’t style it the way I wanted ( notwithstanding I had access to an unused instance just hanging around) .Starting from scratch seemed to be a fool’s errand.I didn’t know one end of a CSS from another and the last time I created a web page, the BLINK tag was de rigueur.Then I stumbled across my goldilocks solution.Static Site GeneratorsFor those not familar with the term, a static site generator (SSG) takes fixed textual content, applies an HTML template to it and generates web pages.The resultant pages are uploaded to a hosting site and bob’s your uncle, you have a blog.And because you can choose different HTML templates, you can achieve a multiplicity of output styles without having to know much about web design.I chose Jekyll as my starting point as it seem to have the largest user community.But there are a number of different options out there:  Hugo  Eleventy  Next.jsamongst othersMein HostMy software projects use GitHub to host their source code.As part of a GitHub account, I have access to GitHub Pages.You get one site aligned to your GitHub username ( known as a “user site” ) and any number of subsidary sites ( known as “project sites” ).And GitHub Pages supports Jekyll out of the box.As with SSG’s, there are other hosting alternatives out there ( i.e. Netlify)As much as I dislike the phrase “journey”, as I build out my blog, I’ll post some explanation of what I did along the way in the hope it may be of use to someone.Or a cautionary tale of being sucked into the futzing swamp."
    } 
    
     
    

  
   
   
   
   ,{
      "title"    : "Microbee",
      "category" : "",
      "tags"     : "true",
      "url"      : "/projects/microbee/",
      "date"     : "",
      "excerpt"  :  "Back in distant past,  my family owned a Microbee.",
      "content"  :  "Back in distant past,  my family owned a Microbee.The Microbee was an Australian designed and manufactured home computer ( by a company called Applied Technology ).Based on a number of S-100 subsystems designed by Applied Technology,  the Microbee was released in 1982, originally as a kit and later as fully assembled models.It sold particularly well in the educational market, both in Australia and Scandinavia.Although only 70,000 units were shipped throughout the 1980’s,  the Microbee had an outsize impact on the Australian personal computer scene. Here is a promotional video of the era.As with most other home computer manufacturer’s of the time,  the advent of IBM PC compatibles proved a death-knell for the company.Microbee Technology is the current owner of the brand and has been actively developing new models of the Microbee.A potted history of the Microbee can be found at Project Granny SmithSpecifications, scmeshificationsThe Microbee was driven by a Z80A CPU @ 3.375Mhz and came with a relatively generous 16 or 32 Kb of RAM.Further the memory was static, allowing the Microbee to preserve memory state even after power-off ( thanks to an inbuilt battery )BASIC was installed in ROM and used audio cassettes to store programs and data.You could optionally have a word processor ( Wordbee ) and editor/assembler ( EDASM ) in ROM as well.Later models included floppy disk drives as well as upgrades to 64 or 128 Kb to facilitate running CP/M 2.2.The Microbee was distinct from it’s competitors in having a relatively high resolution video output ( 64x16/80x24 characters or 512x256 pixels ).This was counterbalanced by rather poor sound capability ( 1 channel audio similar to that of the ZX Spectrum ).And the hi-res video mode was only partially bit-mapped due to a lack of screen RAM.More information on Microbee models and hardware can be found at the MSPP Wiki.Funway into EmulationI spent many happy hours messing about with it before time marched on and I ( and everyone else ) moved onto PC compatibles.But I have always had a soft spot for the ‘Bee.Then, about 10 years ago, I came across an emulator called uBee512.It was a blast running all the old software again but nostalgia will always lose out to young children in competition to your limited free time.Then, a couple of years ago, I stumbled across it again. The challenge this time is that it couldn’t be run natively under macOS.  Running it under a virtual machine was all well and good but as uBee512 was originally built for Unix,  I decided to that it couldn’t be that hard to build a macOS version.  After all,  macOS has a Unix-like architecture at core.Famous last words indeed.  I spent many months trying to build the source code ( learning a fair bit along the way ) before eventually getting something to work.Drunk on my extremely modest triumph,  I then had the harebrained idea to build a native MacOS version, partly as a way to get back into programming and partly to prove that I could.On the linksEven after all this time,  there are still online communities dedicated to the Microbee.  Microbee Software Preservation Project  Microbee Technology Forum  Microbee Users Facebook Group  Microbee Programmers Discord server"
    } 
    
     
    

  
   
   
   
   ,{
      "title"    : "CoreWars",
      "category" : "",
      "tags"     : "true",
      "url"      : "/projects/corewars/",
      "date"     : "",
      "excerpt"  :  "I first read about CoreWars in old back issues of Scientific American.",
      "content"  :  "I first read about CoreWars back when I was at universityI was avoiding studying for a physics exam by flicking through old back issues of Scientific American.In the March 1984 issue, A.K. Dewdney first described Core Wars in his Computer Recreations columnI was hooked.CoreWars pits two programs ( written in simplified programming language called RedCode ) against each other in a virtual machine ( called MARS or Memory Array Redcode Simulator )Photo credit : WikipediaLet the battle commenceEach program ( or warrior ) takes turn in executing their code in a circular memory space or core ( when you reach the end of the core,  executing wraps around to the start ).The program that executes the NOP instruction is deemed the loser.Redcode itself closely resembles assembly language.The code below is a particularly famous Redcode warrior called an ImpMOV 0, 1An Imp simply copies itself one instruction ahead in the virtual machine ( using relative addressing )And when it gets to that instruction, it copies itself again.  And so on.A more complex warrior is known as a DwarfADD #4, 3        MOV 2, @2JMP -2DAT #0, #0I won’t delve into the details of a Dwarf but essentially it writes a NOP every 4 address spaces,  ‘bombing’ the core and hopefully eliminating the opponent.Within this framework, these programs need to rely on complex strategies to defeat their opponents.Further,  genetic programming can be used to evolve warriors without human intervention.Roll my ownWhilst there were more options viz-a-viz MARS environments,  they were mostly CLI versions that needed to be built from source.I was interested in something a little more graphical and that could be extended with GenAI capability for warrior creation/evolution.So I decided to roll my own as my second major project.On the links  Wikipedia  Core War - the Ultimate Programming Game"
    } 
    
     
    

  
   

  
   

  
]